/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/*
 * KEYMAP EDITOR COMPATIBILITY NOTICE
 *
 * This file is structured for compatibility with nickcoutsos's Keymap Editor.
 * The keymap definitions are kept in this single file, while other configurations
 * like behaviors, combos, and custom settings have been moved to separate files.
 *
 * DO NOT add #include directives to this file as they will break compatibility
 * with the Keymap Editor. If you need to modify behaviors or other settings,
 * edit the respective files:
 *  - behaviors.dtsi        - Custom behaviors definitions
 *  - combos.dtsi           - Combo definitions
 *  - layer_defs.dtsi       - Layer constants definitions
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

// Layer definitions
#define NAV_LAYER 1
#define SYM_LAYER 2
#define SYSTEM_LAYER 3
#define MOUSE_LAYER 4

// Required behavior declarations for keymap editor compatibility
/ {

    behaviors {
        ht: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_HOLD_TAPS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            global-quick-tap;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 41 40>;
            require-prior-idle-ms = <75>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            require-prior-idle-ms = <75>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        // tap -> sticky shift | shift + tap or double tap -> caps-word | hold -> shift
        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        // tap or hold -> LALT | double tap -> Caps Lock
        alt_caps: alt_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <50>;
            bindings = <&kp LALT>, <&kp CAPS>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        /*
         * DEFAULT LAYER
         * ,-----------------------------------------.                    ,-----------------------------------------.        
         * |      |  Q  |  W  |  E  |  R  |  T  |                    |  Y  |  U  |  I  |  O  |  P  |      |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      |  A  |  S  |  D  |  F  |  G  |                    |  H  |  J  |  K  |  L  | ; : |      |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      |  Z  |  X  |  C  |  V  |  B  |                    |  N  |  M  | , < | . > | / ? |      |
         * `-----------------------------------------'                    `-----------------------------------------'
         *          |      |      |      |                              |      |      |      |
         *          `--------------------'                              `--------------------'
         */
        default_layer {
            bindings = <
&kp UP    &kp Q        &kp W            &kp E          &kp R              &kp T                 &kp Y        &kp U               &kp I         &kp O    &kp P     &kp UP
&kp LEFT  &hml LGUI A  &hml LEFT_ALT S  &hml LCTRL D   &hml LEFT_SHIFT F  &kp G                 &kp H        &hmr RIGHT_SHIFT J  &hmr RCTRL K  &kp L    &kp SEMI  &kp RIGHT
&kp DOWN  &kp Z        &kp X            &kp C          &kp V              &kp B                 &kp N        &kp M               &kp COMMA     &kp DOT  &kp FSLH  &kp DOWN
                                        &ht LCTRL ESC  &ht LEFT_ALT TAB   &ht LEFT_GUI ENTER    &lt 2 SPACE  &lt 1 BACKSPACE     &lt 3 DEL
            >;
        };

        /*
         * NUMBER LAYER
         * ,-----------------------------------------.                    ,-----------------------------------------.        
         * |      |  /  |  7  |  8  |  9  |  .  |                    | BT2 |  F7 |  F8 |  F9 | F12 |BT CLR|
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      |  *  |  4  |  5  |  6  |  +  |                    | BT1 |  F4 |  F5 |  F6 | F11 | BT4 |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      |  0  |  1  |  2  |  3  |  -  |                    | BT0 |  F1 |  F2 |  F3 | F10 | BT3 |
         * `-----------------------------------------'                    `-----------------------------------------'
         *          |      |      |      |                              |      | DEL |      |
         *          `--------------------'                              `--------------------'
         */
        number_layer {
            bindings = <
&trans  &kp FSLH        &kp N7        &kp N8         &kp N9         &kp DOT      &bt BT_SEL 2  &kp F7         &kp F8         &kp F9        &kp F12        &bt BT_CLR
&trans  &hml LGUI STAR  &hml LALT N4  &hml LCTRL N5  &hml LSHFT N6  &kp PLUS     &bt BT_SEL 1  &hmr LSHFT F4  &hmr LCTRL F5  &hmr LALT F6  &hmr LGUI F11  &bt BT_SEL 4
&trans  &kp N0          &kp N1        &kp N2         &kp N3         &kp MINUS    &bt BT_SEL 0  &kp F1         &kp F2         &kp F3        &kp F10        &bt BT_SEL 3
                                      &trans         &trans         &trans       &trans        &lt 2 DEL      &trans
            >;
        };

        /*
         * SYMBOL LAYER
         * ,-----------------------------------------.                    ,-----------------------------------------.        
         * |      |  !  |  @  |  #  |  $  |  %  |                    |  ^  |  &  |  *  |  =  |  -  | PSCR |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      |  ~  |  [  |  {  |  (  |  /  |                    |  \  |  )  |  }  |  ]  |  _  |      |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      |     |  -  |  =  |  `  |  '  |                    |  "  |  -  |  +  |  =  |  |  |      |
         * `-----------------------------------------'                    `-----------------------------------------'
         *          |      |      |      |                              |      |      |      |
         *          `--------------------'                              `--------------------'
         */
        symbol_layer {
            bindings = <
&trans  &kp EXCL         &kp AT          &kp HASH         &kp DOLLAR       &kp PRCNT    &kp CARET  &kp AMPS         &kp STAR         &kp EQUAL       &kp MINUS        &kp PRINTSCREEN
&trans  &hml LGUI TILDE  &hml LALT LBKT  &hml LCTRL LBRC  &hml LSHFT LPAR  &kp FSLH     &kp BSLH   &hmr LSHFT RPAR  &hmr LCTRL RBRC  &hmr LALT RBKT  &hmr LGUI UNDER  &trans
&trans  &trans           &kp MINUS       &kp EQUAL        &kp GRAVE        &kp SQT      &kp DQT    &kp MINUS        &kp PLUS         &kp EQUAL       &kp PIPE         &trans
                                         &trans           &trans           &trans       &trans     &trans           &trans
            >;
        };

        /*
         * NAVIGATION LAYER
         * ,-----------------------------------------.                    ,-----------------------------------------.        
         * |      | PREV | C→  | PLAY | NEXT |     |                    |     |     | PgUp | PgDn |     | DEL |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      | HOME |PgDn |PgUp | END |     |                    | ←   |  ↓  |  ↑  |  →  | GUI |     |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      |     |     |     |     | C←  |                    |BR↓  |VOL- |VOL+ |BR↑  |     |     |
         * `-----------------------------------------'                    `-----------------------------------------'
         *          |      |      |      |                              |      |      |      |
         *          `--------------------'                              `--------------------'
         */
        navigation_layer {
            bindings = <
&trans  &kp C_PREV      &kp LC(RIGHT)    &kp C_PP          &kp C_NEXT      &trans          &trans         &trans           &kp LC(PG_UP)  &kp LC(PG_DN)    &trans    &kp DEL
&trans  &hml LGUI HOME  &hml LALT PG_DN  &hml LCTRL PG_UP  &hml LSHFT END  &trans          &kp LEFT       &hmr LSHFT DOWN  &hmr LCTRL UP  &hmr LALT RIGHT  &kp LGUI  &trans
&trans  &trans          &trans           &trans            &trans          &kp LC(LEFT)    &kp C_BRI_DEC  &kp C_VOL_DN     &kp C_VOL_UP   &kp C_BRI_INC    &trans    &trans
                                         &trans            &trans          &trans          &trans         &trans           &trans
            >;
        };
        
        /*
         * MOUSE LAYER
         * ,-----------------------------------------.                    ,-----------------------------------------.        
         * |      | UNDO |      | COPY | PASTE|     |                    | SCL← | SCL↑ |  MUP | SCL↓ | SCL→ |ACCENT|
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      | LGUI | LALT | LCTL | LSFT|     |                    |     | MLFT | MDWN | MRGT | MB3  | TOG |
         * |------+-----+-----+-----+-----+-----|                    |-----+-----+-----+-----+-----+------|
         * |      | REDO | ALL  | CUT  |     |     |                    |     | MB4  | MB3  | MB5  |ACCEL |     |
         * `-----------------------------------------'                    `-----------------------------------------'
         *          | ESC  | MB2  | MB1  |                              | SCRL | DEL  | MB3  |
         *          `--------------------'                              `--------------------'
         */
        mouse_layer {
            bindings = <
&trans  &kp LC(Z)      &trans        &kp LC(C)       &kp LC(V)      &trans       &mwh SCROLL_LEFT  &mwh SCROLL_UP     &mmv MOVE_UP    &mwh SCROLL_DOWN  &mwh SCROLL_RIGHT  &tog MOUSE_LAYER
&trans  &hml LGUI TAB  &hml LALT TAB &hml LCTRL TAB  &hml LSHFT TAB &trans       &trans            &mmv MOVE_LEFT     &mmv MOVE_DOWN  &mmv MOVE_RIGHT   &mkp MB3           &tog MOUSE_LAYER
&trans  &kp LC(Y)      &kp LC(A)     &kp LC(X)       &trans         &trans       &trans            &mkp MB4           &mkp MB3        &mkp MB5          &kp K_SCROLL_LOCK  &trans
                                     &kp ESC         &mkp MB2       &mkp MB1     &mwh SCROLL_DOWN  &kp DELETE        &mkp MB3
            >;
=======
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        display-name = "Base";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        display-name = "Lower";
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        display-name = "Raise";
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                extra_1 {
                        status = "reserved";
                };

                extra_2 {
                        status = "reserved";
                };

                extra_3 {
                        status = "reserved";
                };
        };
    };
};
